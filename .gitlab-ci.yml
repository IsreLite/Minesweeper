name: CI


jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    tags:
    # - docker
    - shell

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Linux GCC,      os: ubuntu-20.04  }
        - { name: Linux Clang,    os: ubuntu-20.04, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: Linux GCC OpenGL ES, os: ubuntu-20.04, flags: -DSFML_OPENGL_ES=ON }
        - { name: MacOS XCode,    os: macos-11   }
        config:
        - { name: Shared,       flags: -DBUILD_SHARED_LIBS=TRUE }
        - { name: Static,       flags: -DBUILD_SHARED_LIBS=FALSE }

        include:
        - platform: { name: Linux GCC, os: ubuntu-20.04  }
          config: { name: Static DRM, flags: -DBUILD_SHARED_LIBS=FALSE -DSFML_USE_DRM=TRUE }
        - platform: { name: Linux GCC, os: ubuntu-20.04  }
          config: { name: Shared DRM, flags: -DBUILD_SHARED_LIBS=TRUE -DSFML_USE_DRM=TRUE }
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Linux Dependencies
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev

  
    - name: Configure CMake
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install -DSFML_BUILD_EXAMPLES=TRUE -DCMAKE_VERBOSE_MAKEFILE=ON -DSFML_BUILD_TEST_SUITE=TRUE -DWARNINGS_AS_ERRORS=TRUE ${{matrix.platform.flags}} ${{matrix.config.flags}}

    - name: Build
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/build --config Release --target install
