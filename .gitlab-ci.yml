# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
image: gcc:latest

stages:          # List of stages for jobs, and their order of execution
  - build
   #- test
   #- deploy
  - apt update && apt -y install make autoconf

build-job:       # This job runs in the build stage, which runs first.
  stage: build
    - cp ../*.h .  # Copy all .h files to the build directory
    - cp ../*.cpp .  # Copy all .cpp files to the build directory
    - cp -r ../src .  # Copy the src directory to the build directory
    # - g++ *.cpp -o mybinary
    # - g++ -c -I. *.h
    # - g++ *.cpp -o output
    # - g++ -o out -I . -I ./ *.cpp ./*.cpp
    - g++ -g $(find ../ -type f -iregex ".*\.cpp") -o Minesweeper

    # - g++ -g -Wall *.cpp Minesweeper.cc -o Minesweeper.out
    # - g++ Minesweeper.cpp Minesweeper.cpp Minesweeper.h
  tags:
    - docker
